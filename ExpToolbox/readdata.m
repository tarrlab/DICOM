function varargout = readdata(in_fname, dummy)%READDATA reads data file into a set of column vectors%    usage:	[col1, col2, ...] = readdata(in_fname, cols);%			in_fname = text file to read%%    returns:	[col1, col2, ...]%			one column vector for each column in the file%%	NOTES:%		1. Output vector types (numeric or string) are based on the contents of the first line.%		2. All rows MUST contain the same number of columns%%   Version 1.3%   Corrected problem where using str2num used eval, so that stimuli with%   names corresponding to functions (e.g., 'toilet' 'window' etc) call the%   function, crashing the program%%   As suggested by Adrian Nestor, replaced ~isempty(str2num(v(ixi,:)))%   with   ~isnan(str2double(v(ixi,:)))%%   Version 1.2%   Corrected problem with assuming strings even in their absence%%   Version 1.1%   Corrected problem with converting to numeric data and got rid of%   manually specifying the number of columns%%	StatToolbox.% Find out number of columns and rows in filecols = 0;lines = 0;x = 0;% Open Data Filedatafile = fopen(in_fname, 'rt');% Read first line to get the number of columnsx=fgetl(datafile);[temp, cols] = sscanf(x, '%s');if cols ~= nargout	error('Number of output arguments must equal number of columns in file.');endclear temp;frewind(datafile);x = 0;% Loop through data file until we get a -1 indicating EOF% to get the number of rowswhile(x~=(-1))	x=fgetl(datafile);	lines = lines + 1;endlines = lines - 1;frewind(datafile);for ixi = 1:lines*cols	temp = fscanf(datafile, '%s',1);	if ixi == 1		v = temp;	else		v = char(v, temp);	endend% Close Stimulus Filefclose (datafile);% Do nasty array manipulation/contortionn = [];s = [];ndx = [];sdx= [];for ixi = 1: lines*cols    % matlab treats i&j as imaginary numbers --- we parse as strings    if ( ~strcmp(v(ixi,:),'i') && ~strcmp(v(ixi,:),'j') && ~isnan(str2double(v(ixi,:))) )        % contains numeric data        if isempty(n)            n = str2num( v(ixi,:) );        else            n = [n; str2num( v(ixi,:) )];	% extract numeric data        end        if ixi <= cols            ndx = [ndx;ixi];	% columns with numeric data        end    else					% contains string data       if isempty(s)            s = v(ixi,:);        else            s = str2mat( s, v(ixi,:) );        end        if ixi <=cols            sdx = [sdx;ixi];	% columns with string data        end    endendncols = prod(size(ndx));scols = prod(size(sdx));% form numeric columnsn = reshape(n,ncols,lines)';for ixi = 1:ncols	varargout(ndx(ixi)) = {n(:,ixi)};end% form string columnsif ~isempty(s)    sc = cellstr(s);    sc = reshape(sc,scols,lines)';endfor ixi = 1:scols	varargout(sdx(ixi)) = {char(sc{:,ixi})};end